name: AWS_Lambda_Deployment

on:
  push:
    branches:
      - feature/aws_lambda
  pull_request:
    branches:
      - feature/aws_lambda

jobs:
  aws_lambda_deployment:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Install Git LFS
      - name: Install Git LFS
        run: git lfs install

      # Step 3: Pull LFS Files
      - name: Pull LFS Files
        run: git lfs pull

      # Step 4: List Files in Workspace (Debugging)
      - name: List Files
        run: |
          echo "Listing all files in the workspace:"
          ls -lR

      # Step 5: Set up Python Environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Step 6: Install Dependencies for CDK
      - name: Install Dependencies
        run: |
          pip install dvc[s3] boto3 aws-cdk-lib==2.168.0
          npm install -g aws-cdk

      # Step 7: Verify Model File Integrity (Debugging)
      - name: Verify Model File Integrity
        run: |
          echo "Calculating SHA256 checksum for model.pt"
          sha256sum ./model.pt

      # Step 8: Build Docker Image and Inspect Contents (Debugging)
      - name: Build Docker Image and Inspect Contents
        run: |
          docker build -t test-image .
          echo "Inspecting files inside Docker image:"
          docker run --rm -it test-image ls -l /var/task
          echo "Verifying model file in Docker image:"
          docker run --rm -it test-image sha256sum /var/task/model.pt

      # Step 9: Configure AWS Credentials
      - name: Configure AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

      # Step 10: Bootstrap CDK
      - name: CDK Bootstrap
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cdk bootstrap

      # Step 11: Synthesize and Deploy CDK Stack
      - name: CDK Synthesize and Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          cdk synthesize
          cdk deploy --require-approval never
