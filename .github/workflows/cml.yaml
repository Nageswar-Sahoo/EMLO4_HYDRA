name: Train and Report
on:
  push:
    branches: [ origin/feature/optuna ]
  pull_request:
    branches: [ main, origin/feature/optuna ]
jobs:
  train-and-report:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: iterative/setup-cml@v2
      
      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Set up Python 3.12
        run: uv python install 3.12

      - name: Install dependencies
        env:
          UV_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu
          GRPC_SSL_CIPHER_SUITES: HIGH+ECDSA

        run: |
          uv sync

      - name: Pull data from DVC
        env:
          GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
          GRPC_SSL_CIPHER_SUITES: HIGH+ECDSA

        run: |
          uv run dvc pull --jobs 8 -vv --no-run-cache

      - name: Train model
        run: |
          uv run dvc repro

      - name: Create CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Generate plots and test metrics table
          uv run python scripts/generate_plots.py
          
          # Create markdown report
          echo "## Model Training Results" >> report.md
          echo "### Training Metrics" >> report.md
          echo "![Training Loss](./train_loss.png)" >> report.md
          echo "![Training Accuracy](./train_acc.png)" >> report.md
          
          echo "### Test Metrics" >> report.md
          cat test_metrics.md >> report.md
          
          # Post CML report as a comment in GitHub
          cml comment create report.md
