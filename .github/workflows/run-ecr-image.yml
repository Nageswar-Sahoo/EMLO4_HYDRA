name: Run Docker Image with Script

on:
  workflow_dispatch: # Manual trigger
    inputs:
      ecr_image_name:
        description: "ECR Image name to run (e.g., dogbreed-classification)"
        required: true
      script_path:
        description: "Path to the script to execute inside the container (e.g., src/train.py)"
        required: true

jobs:
  pull-and-run-image:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Configure AWS Credentials
      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      # Step 2: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 3: Pull the Docker Image
      - name: Pull Docker Image
        env:
          ECR_IMAGE_NAME: ${{ github.event.inputs.ecr_image_name }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          FULL_IMAGE_URI="${ECR_REGISTRY}/${ECR_IMAGE_NAME}"
          echo "Pulling Docker image: ${FULL_IMAGE_URI}"
          docker pull "${FULL_IMAGE_URI}"

      # Step 4: Run the Docker Image with Volume and Script
      - name: Run Docker Image
        env:
          ECR_IMAGE_NAME: ${{ github.event.inputs.ecr_image_name }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          SCRIPT_PATH: ${{ github.event.inputs.script_path }}
        run: |
          FULL_IMAGE_URI="${ECR_REGISTRY}/${ECR_IMAGE_NAME}"
          WORKSPACE="$(pwd)"
          echo "Running Docker image: ${FULL_IMAGE_URI} with script ${SCRIPT_PATH}"
          docker run \
            -v "${WORKSPACE}/model_artifacts:/app/logs" \
            "${FULL_IMAGE_URI}" \
            "${SCRIPT_PATH}"

      # Step 5: Display Logs (Optional - If logs are stored in a volume)
      - name: Show Logs
        if: always()
        run: |
          echo "Displaying logs from model_artifacts..."
          cat model_artifacts/*
